@model Sztek.Models.DatabaseEntities

@{
    ViewBag.Title = "Váróterem";
}

<h2>Váróterem</h2>
<section style="float: right">
    <div class="container">
        <h3>Chat</h3>
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Küldés" />
        <input type="hidden" id="displayname" value="@User.Identity.Name" />
        <div style="height: 300px; width:auto; border:1px solid #ccc; overflow:auto; background-color: #ffffff">
            <ul id="discussion"></ul>
        </div>
    </div>
</section>
<div id="newGameCreator" style="padding-top: 20px; display: none;">
    <h3>Játék neve:</h3>
    <input type="text" id="gameName" placeholder="(opcionális)" style="max-width: 320px;"><br>
    <h3>Játék típusa:</h3>
    <select id="newGameType">
        <option value="0">DeathMatch</option>
        <option value="1">TeamDeathMatch</option>
    </select><br>
    <button type='submit' onclick="createGame()" style="margin-right:10px; margin-top: 20px;">Új játék létrehozása</button><br>
    <button type='submit' onclick='showActiveGames()' style='margin-top: 20px;'>Vissza</button>
</div>
<button id="newGameButton" type="submit" onclick="showNewGameCreator()" style="margin-top: 20px;">Új játék létrehozása</button>
<div id="activeGames" style="max-width:400px">
    <section id="activeGamesSection">
        <h3>Aktív játékok</h3>
        <ul id="activeGamesList">
        </ul>
        <p id="noActiveGames">Nincsenek aktív játékok</p>
        <div id="gameListLoadingText" style="visibility: hidden">Betöltés...</div>
    </section>
</div>

<script type="text/javascript">
    function showNewGameCreator() {
        newGameCreator.style.display = "block";
        activeGamesSection.style.display = "none";
        newGameButton.style.display = "none";
    }

    // Join to selected game. If TeamDeathMatch, the team number should be provided {0,1}, if deathMatch it should be {0}
    function joinToGame(gameID, team) {
        var url = '@Url.Action("JoinGameLobby", "Lobby")';
        $.ajax({
            url: url,
            type: 'POST',
            cache: false,
            data: { gameId: gameID, teamNr: team },
            success: function (resp) {
                if (resp.error) {
                    alert('Csak egy játékhoz csatlakozhatsz!');
                }
            }
        });
    }

    // View the game's lobby, in which the players can be seen
    function viewGame(gameID) {
        activeGamesSection.style.display = "none";
        newGameCreator.style.display = "none";
        newGameButton.style.display = "none";

        var content = "<section id='gameDetailsSection'>" +
                      "<h3>Játék adatai</h3>" +
                      "<div id ='gameDetails'></div>" +
                      "<button type='submit' onclick='showActiveGames()' style='margin-top: 20px;'>Vissza</button>" +
                      "<h3>Játékosok</h3>" +
                      "<ul id='UsersList'>" +
                      "</ul>" +
                      "</section>";
        $("#activeGames").append(content);

        // Get game details
        $.ajax({
            url: '@Url.Action("GetGameDetails", "Lobby")',
            type: 'POST',
            cache: false,
            data: { gameId: gameID },
            success: function (result, err) {
                setDetails(result);
            }
        });

        // Get players
        var users = $.ajax({
            url: '@Url.Action("UsersInGame", "Lobby")',
            type: 'POST',
            cache: false,
            data: { gameId: gameID }
        });
        users.then(function (results, err) {
            if (err == "success") {
                fillPlayersView(results);
            }
        });
    }

    function setDetails(game) {
        $("<div />", {
            html: "<span style='font-weight:bold'>Név: </span>" + game.gameName + "<br>",
            style: "padding-top: 10px; padding-bottom: 5px;"
        }).appendTo("#gameDetails");

        var typeText;
        if (game.gameType == 0) {
            typeText = "DeathMatch";
        }
        else {
            typeText = "Team DeathMatch"
        }
        $("<div />", {
            html: "<span style='font-weight:bold'>Típus: </span>" + typeText + "<br>",
        }).appendTo("#gameDetails");

        var buttonString;
        if (!game.isUserPlayer) {
            if (game.gameType == 0)
                buttonString = "<button type='submit' onclick='joinToGame(" + game.id + ",0)'>Csatlakozás</button>";
            else
                buttonString = "<button type='submit' onclick='joinToGame(" + game.id + ",0)'>Csatlakozás | 1</button>" +
                               "<button type='submit' onclick='joinToGame(" + game.id + ",1)'>Csatlakozás | 2</button>";
        }
        else {
            buttonString = "<button type='submit' onclick='leaveGame(" + game.id + ")'>Játék elhagyása</button>";
        }

        $("<div />", {
            html: buttonString,
        }).appendTo("#gameDetailsSection");
    }

    function fillPlayersView(players) {
        if ($("#UsersList") != null) {
            $("#UsersList").empty();

            if (players.length == 0) {
                $("<div />", {
                    html: "Nincsenek csatlakozott játékosok",
                    style: "padding-bottom: 5px; margin-left: -40px;"
                }).appendTo("#UsersList");
            }

            if (players[0].gameType == 0) {
                showGameMembers(players, -1);
            }
            else {
                showGameMembers(players, 0);
                showGameMembers(players, 1);
            }
        }
    }

    // Show list of players according to their team
    function showGameMembers(userList, team) {
        var url = '@Url.Action("Details", "Account")'; 
        if (team != -1) {
            var teamNr = team + 1;
            $("<div />", {
                html: teamNr + ". csapat",
                style: "padding-bottom: 5px; margin-left: -20px; text-decoration:underline;"
            }).appendTo("#UsersList");

            for (var u in userList) {
                if (userList[u].team == team) {
                    
                    var dynamicLink = "<a href='" + url +'/' + userList[u].id + "' id='dynamicLink'>" + userList[u].username + "</a>";

                    $("<li />", {
                        html: dynamicLink,
                        style: "padding-bottom: 5px"
                    }).appendTo("#UsersList");
                }
            }
        }
        else {
            for (var u in userList) {
                var dynamicLink = "<a href='" + url + "/" + userList[u].id + "' id='dynamicLink'>" + userList[u].username + "</a>";

                $("<li />", {
                    html: dynamicLink,
                    style: "padding-bottom: 5px"
                }).appendTo("#UsersList");
            }
        }
    }

    // Play the game (should redirect to the game's page)
    function playGame(gameID) {

    }

    // Create a new game
    function createGame() {
        var url = '@Url.Action("CreateNewGame", "Lobby")';
        $.ajax({
            url: url,
            type: 'POST',
            cache: false,
            data: { typeNr: newGameType.selectedIndex, name: $("#gameName")[0].value },
            success: function (res) {
                if (res.err && res.errMessage) {
                    alert(res.errMessage);
                }
                else {
                    alert("Játék sikeresen létrehozva");
                    showActiveGames();
                }
            }
        });
    }

    function showActiveGames() {
        // Refresh the page with the active games
        activeGamesSection.style.display = "block";
        newGameButton.style.display = "block";
        newGameCreator.style.display = "none";

        if (activeGames.childElementCount == 2) {
            activeGames.removeChild(gameDetailsSection);
        }
        $.ajax({ url: '@Url.Action("RefreshActiveGamesList", "Lobby")',
            success: function (resp) {
                console.log(resp);
            },
            error: function (err) {
                console.log(err);
            }
        });
    }

    function leaveGame(gameID) {
        var url = '@Url.Action("LeaveGame", "Lobby")';
        $.ajax({
            url: url,
            type: 'POST',
            cache: false,
            data: { gameId: gameID },
            success: function () {
                showActiveGames();
            }
        });
    }
</script>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.chatHub;

        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (name, message) {
            // Add the message to the page.
            $('#discussion').append('<li><strong>' + htmlEncode(name)
                + '</strong>: ' + htmlEncode(message) + '</li>');
        };

        // Refresh players of a game
        chat.client.gameMembersList = function (players) {
            fillPlayersView(players.Data);
        }

        // List the games which are active
        chat.client.activeGamesList = function (activeGames) {
            $("#activeGamesList").empty();

            noActiveGames.style.visibility = "hidden";
            gameListLoadingText.style.visibility = "visible";

            if (activeGames)
            {
                for (var game in activeGames) {
                    var gameType;
                    if (activeGames[game].gameType == 0)
                        gameType = "DeathMatch";
                    else
                        gameType = "TeamDeathMatch";

                    var buttonString;
                    var elemBackground;
                    if (contains(activeGames[game].users, "@User.Identity.Name")) {
                        elemBackground = "99CC00";
                        if (activeGames[game].users.length < 4) {
                            buttonString = "<button type='submit' onclick='viewGame(" + activeGames[game].id + ")'>Részletek</button>";
                        }        
                        else {
                            buttonString = "<button type='submit' onclick='playGame(" + activeGames[game].id + ")'>Játék</button>";
                        }                          
                    }
                    else {
                        elemBackground = "ffffff";
                        buttonString = "<button type='submit' onclick='viewGame(" + activeGames[game].id + ")'>Részletek</button>";
                    }

                    $("<li />", {
                        html: "<div style='background-color: #"+elemBackground+"; padding: 5px; box-shadow: 1px 1px 1px #888888;'>" +
                            activeGames[game].gameName + " (" + gameType + ")<br/>" + buttonString + "</div>",
                        style: "padding-bottom: 5px"
                    }).appendTo("#activeGamesList");
                }
            }
            gameListLoadingText.style.visibility = "hidden";
        };

        // ???
        chat.client.startGame = function (userList) {
            var currentName = $("#displayname").val();
            var isPlaying = false;
            for (var i = 0; i < userList.length; i++) {
                if (currentName == userList[i].username) {
                    isPlaying = true;
                    break;
                }
            }
            if (isPlaying) {
                //todo játék indítása
                console.log(userList[i]);
            }
        };

        // Get the user name and store it to prepend to messages.
        $('#displayname').val("@User.Identity.Name");
        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                chat.server.send($('#displayname').val(), $('#message').val());
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            });
        });

        showActiveGames();
    });

    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    // This function helps to determine if an array contains an object
    function contains(a, obj) {
        for (var i = 0; i < a.length; i++) {
            if (a[i] === obj) {
                return true;
            }
        }
        return false;
    }
</script>

}


