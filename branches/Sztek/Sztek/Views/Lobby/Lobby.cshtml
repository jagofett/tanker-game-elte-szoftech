@model Sztek.Models.DatabaseEntities

@{
    ViewBag.Title = "Váróterem";
}

@Html.Hidden("joinedUrl",Url.Action("GetLobbyList","Lobby"))
@Html.Hidden("joinUrl",Url.Action("JoinLobby","Lobby"))

<h2>Váróterem</h2>
<section style="float: right">
    <div class="container">
        <h3>Chat</h3>
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Küldés" />
        <input type="hidden" id="displayname" value="@User.Identity.Name" />
        <div style="height: 300px; width:auto; border:1px solid #ccc; overflow:auto;">
            <ul id="discussion"></ul>
        </div>
    </div>
</section>
<div id="joinedUsers">
    <section>
        <h3>Várakozó felhasználók</h3>
        <ul id="waitingUsersList">
        </ul>
        <button id="joinLobby" type="submit">@ViewBag.Message</button>
    </section>
</div>
<div id="activeGames">
    <section id="activeGamesSection">
        <h3>Aktív játékok</h3>
        <ul id="activeGamesList">
        </ul>
        <p id="gameListLoadingText">Betöltés...</p>
    </section>
</div>

<script type="text/javascript">
    // Join to selected game. If TeamDeathMatch, the team number should be provided {0,1}, if deathMatch it should be {0}
    function joinToGame(gameID, team) {
        var url = '@Url.Action("JoinGameLobby", "Lobby")';
        $.ajax({
            url: url,
            type: 'POST',
            cache: false,
            data: { gameId: gameID, teamNr: team },
            success: function (resp) {
                if (resp.error) {
                    alert('Csak egy játékhoz csatlakozhatsz!');
                }
            }
        });
    }

    // View the game's lobby, in which the players can be seen
    function viewGame(gameID) {

    }

    // Play the game (should redirect to the game's page)
    function playGame(gameID) {

    }

    function refresh() {
        var url = $("#joinedUrl").val();
        $.getJSON(url, function() {});
        //$('#joinedUsers').load(url);
    }

    $(document).ready(function () {
        refresh();
        //setInterval(refresh, 1000);
        $("#joinLobby").click(function(e) {
            e.preventDefault();
            var url = $("#joinUrl").val();
            var btn = this;
            $.post(url, function(resp) {
                //refresh();
                if (resp.error)
                {
                    alert("Hiba! Már részt veszel egy játékban!");
                    return;
                }
                //if (res.startId) {
                //    alert("Game started with id: " + res.startId);
                //}
                $(btn).html(resp.btnStr);
            });
        });
    });
</script>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            // List the players which are waiting for playing
            chat.client.lobbyList = function (userList) {
                var currentName = $("#displayname").val();
                $("#waitingUsersList").empty();

                var message = "Csatlakozás";
                for (var user in userList) {
                    var userName = userList[user].username;
                    $("<li />", { html: userName }).appendTo("#waitingUsersList");
                    if (currentName == userName) {
                        message = "Kilépés";
                    }
                }
                $("#joinLobby").html(message);
            };

            // List the games which are active
            chat.client.activeGamesList = function (activeGames) {
                $("#activeGamesList").empty();

                gameListLoadingText.style.visibility = "hidden";

                for (var game in activeGames) {
                    var gameType;
                    if (activeGames[game].gameType == 0)
                        gameType = "DeathMatch";
                    else
                        gameType = "TeamDeathMatch";

                    var buttonText;
                    if (contains(activeGames[game].users, "@User.Identity.Name")) {
                        if (activeGames[game].users.length < 4)
                            buttonText = "Megtekintés";
                        else
                            buttonText = "Játék";
                    }
                    else {
                        buttonText = "Csatlakozás";
                    }

                    var buttonString;
                    if (buttonText == "Megtekintés") {
                        buttonString = "<button type='submit' onclick='viewGame(" + activeGames[game].id + ")'>" + buttonText + "</button>";
                    }
                    else if (buttonText == "Játék") {
                        buttonString = "<button type='submit' onclick='playGame(" + activeGames[game].id + ")'>" + buttonText + "</button>";
                    }
                    else {
                        if (activeGames[game].gameType == 0)
                            buttonString = "<button type='submit' onclick='viewGame(" + activeGames[game].id + ")'>" + buttonText + "</button>";
                        else
                            buttonString = "<button type='submit' onclick='joinToGame(" + activeGames[game].id + ",0)'>" + buttonText + "|1</button>" +
                                           "<button type='submit' onclick='joinToGame(" + activeGames[game].id + ",1)'>" + buttonText + "|2</button>";
                    }

                    $("<li />", {
                        html: buttonString + activeGames[game].gameName + " (" + gameType + ")"
                    }).appendTo("#activeGamesList");
                }
            };

            // ???
            chat.client.startGame = function (userList) {
                var currentName = $("#displayname").val();
                var isPlaying = false;
                for (var i = 0; i < userList.length; i++) {
                    if (currentName == userList[i].username) {
                        isPlaying = true;
                        break;
                    }
                }
                if (isPlaying) {
                    //todo játék indítása
                    console.log(userList[i]);
                }
            };

            // Get the user name and store it to prepend to messages.
            $('#displayname').val("@User.Identity.Name");
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                refresh();
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        // This function helps to determine if an array contains an object
        function contains(a, obj) {
            for (var i = 0; i < a.length; i++) {
                if (a[i] === obj) {
                    return true;
                }
            }
            return false;
        }
</script>

}


